toc:
  - name: Project Information
    file: ../README.md
    children:
      - name: app.js
        description: |
          Main file of the project.

          Handles administrative functions such as setting up view engine, routing, and exposing ports.

      - name: public/js/icons_map.js
        description: |
          Mapping file between MIME types and image file names.

          Used to determine what image should be displayed for each file in the frontend.

      - name: public/js/index.js
        description: |
          Contains functions necessary for the main file-viewing frontend.

          Manages display of files and responds to button clicks.

      - name: public/js/login.js
        description: |
          Contains functions for managing user login.

          Allows users to login to their account or register a new account.

      - name: public/js/test_suite.js
        description: |
          Contains functions for running the test suite.

      - name: routes/authenticate.js
        description: |
          Contains routing functions for authentication-related requests.

          Manages logging in and out, registration, and validating logins in the backend.

      - name: routes/connection.js
        description: |
          Defines connection information for the mongo and mysql databases

      - name: routes/FileInteraction.js
        description: |
          Contains routing functions for functions related to interacting with files.

          Manages file and directory upload and download, deletion, renaming, sharing, etc. in the backend.

          Also checks any requests for file interaction by verifying the requester's session is valid before proceeding.
      - name: routes/index.js
        description: |
          Serves and renders index page (main page) html.

      - name: routes/login.js
        description: |
          Serves and renders login page html.

      - name: routes/SessionManager.js
        description: |
          Contains functions necessary for interacting with user sessions.

          Can validate, create new, refresh, or delete sessions.
          
      - name: routes/UserAuthentication.js
        description: |
          Contains functions necessary for authenticating users in the backend.

          Can authenticate a user given a username and password, or register a new user.

  - name: Works Cited
    children:
      - name: bcrypt
        description: |
          Bcrypt is a library used for hashing strings.

          We used this module for the purpose of hashing passwords before storing them in the database and for comparing those passwords.

          https://www.npmjs.com/package/bcrypt

      - name: cookie-parser
        description: |
          Cookie parser is a middleware module that automatically parses cookies in requests sent to the server.

          This makes reading cookies inside request functions much easier.

          https://www.npmjs.com/package/cookie-parser

      - name: dateformat
        description: |
          Date format is self-explanatory. It allows JS date objects to be formatted in very customizable ways.

          https://www.npmjs.com/package/dateformat

      - name: documentation
        description: |
          Documentation.js is a simple documentation generation package that uses the JSDoc format.

          We used documentation.js for generating documentation from our js files.

          https://www.npmjs.com/package/documentation

      - name: express
        description: |
          The express package provides a fast, simple web framework for node.js applications.

          We used express for our server hosting.

          https://www.npmjs.com/package/express

      - name: ejs
        description: |
          EJS is a simple templating language and view engine that can be used to generate HTML using javascript.

          We used ejs for our html view engine.

          https://www.npmjs.com/package/ejs

      - name: express-fileupload
        description: |
          This package is a simple express middleware used for uploading files to a server.

          https://www.npmjs.com/package/express-fileupload

      - name: express-zip
        description: |
          This package allows zipping files on the server when sending them back to the client, with no intermediate steps or calls.

          https://www.npmjs.com/package/express-zip

      - name: mime
        description: |
          Mime contains all useful MIME type mappings, used in the mongoDB backend.

          https://www.npmjs.com/package/mime

      - name: mongodb
        description: |
          This package is the preferred method of interacting with Mongo databases in Node.

          We used mongo for all file storage and access.

          https://www.npmjs.com/package/mongodb

      - name: mysql
        description: |
          This package is used for interacting with mysql server instances.

          We used mysql for user authentication and session management.

          https://www.npmjs.com/package/mysql

      - name: path
        description: |
          Path is a module for working with files and directories.

          We used path for our routing functionality.

          https://www.npmjs.com/package/path

      - name: jQuery
        description: |
          jQuery is a javascript library that contains many useful functions for interacting with the DOM, making asyncronous calls, etc.

          We used jQuery for both of these purposes.

          https://jquery.com/

      - name: Bootstrap
        description: |
          Bootstap is a frontend HTML/CSS/JS library that simplifies many aspects of visual/frontend design.

          We used Bootstrap for its modals, navbars, and progress bar (and assorted other small functions).

          https://getbootstrap.com/docs/4.1/getting-started/introduction/

      - name: Popper.js
        description: |
          Popper is a javascript library used to more easily make tooltips and small dialogs.

          https://popper.js.org/

      - name: SnackbarJS
        description: |
          SnackbarJS is a library for displaying snackbar/toast popups at the bottom of the window.

          We used SnackbarJS for reset game/submit score popups in the game modal.

          https://fezvrasta.github.io/snackbarjs/

      - name: Js-Cookie
        description: |
          Js-Cookie is a small, lightweight javascript API for handling browser cookies

          We used this module in our test suite for more ease of use.

          https://github.com/js-cookie/js-cookie

      - name: jQuery Form Plugin
        description: |
          This plugin allows HTML forms to be submitted using ajax.

          We used this plugin for better file upload integration.

          http://malsup.com/jquery/form/

      - name: Images
        description: |
          File Icons from:

          https://github.com/redbooth/free-file-icons

          Folder Icon from:

          http://yousense.info/33/06889-folder-icon-32x32.html

          Download Button Image by Smashicons from:

          https://www.flaticon.com/free-icon/cloud-computing_149211#term=cloud%20computing&page=1&position=3

          Upload Button Image by Freepik from:

          https://www.flaticon.com/free-icon/upload-to-cloud_109713#term=upload%20to%20cloud&page=1&position=1

          Delete Button Image by Kiranshastry from:

          https://www.flaticon.com/free-icon/delete_709519#term=delete&page=1&position=18

          Folder Button Image by Elegant Themes from:

          https://www.flaticon.com/free-icon/new-add-folder_8715#term=new%20add%20folder&page=1&position=7

          Share Button Image by Dave Gandy from:

          https://www.flaticon.com/free-icon/share-option_25419#term=share%20option&page=1&position=1
